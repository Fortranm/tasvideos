@page "{id}"
@model IndexModel
@{
	ViewData.SetTitle($"Games for Group: {Model.Name}");
}
<label class="mb-2">Abbreviation: @Model.Abbreviation</label>
<warning-alert condition="!Model.Games.Any()">
	No Games Listed for this Game Group
</warning-alert>
<top-button-bar>
	<edit-link asp-page="Edit" asp-route-id="@Model.Id" permission="CatalogMovies"></edit-link>
	<a asp-page="List" class="btn btn-secondary">All Groups</a>
</top-button-bar>
<card condition="!string.IsNullOrWhiteSpace(Model.Description)" class="mb-2">
	<cardheader>Description</cardheader>
	<cardbody><wiki-markup markup="@Model.Description"></wiki-markup></cardbody>
</card>
<standard-table condition="Model.Games.Any()">
	<tr>
		<th>Game</th>
		<th>Systems</th>
		<th>Publications</th>
		<th>Submissions</th>
		<th>Resource Page</th>
	</tr>
	@foreach (var game in Model.Games.OrderBy(g => g.Name).ThenBy(g => g.SystemsString()))
	{
		<tr>
			<td>
				<game-link id="game.Id">
					@game.Name
				</game-link>
			</td>
			<td>
				@game.SystemsString()
			</td>
			<td>
				<a href="/Movies-@(game.Id)G">
					@game.PubCount
				</a>
			</td>
			<td>
				<a href="/Subs-List?GameId=@(game.Id)">
					@game.SubCount
				</a>
			</td>
			<td>
				<a href="/@game.GameResourcesPage">
					@game.GameResourcesPage
				</a>
			</td>
		</tr>
	}
</standard-table>
