@page "{id}"
@model RateModel
@{
	ViewData.SetTitle($"Movie #{Model.Id} - {Model.Rating.Title}");
}
<div asp-validation-summary="All" class="text-danger"></div>
<form method="post">
	<input type="hidden" asp-for="Rating.Title" />
	<row>
		<column class="text-center text-md-start">
			<form-group>
				<span class="fs-4">@Html.DisplayNameFor(m => m.Rating.Rating)</span>
				<span class="text-nowrap">
					( <input asp-for="Rating.Unrated" />
					<label asp-for="Rating.Unrated">Unrated</label> )
				</span>
				<br />
				<input asp-for="Rating.Rating" type="number" class="form-control fs-4 d-inline-block" style="width:4em;" min="0" max="10" value="@Model.Rating.Rating" step="0.1" />
				<input id="entertainmentSlider" type="range" class="form-range mw-100 h-auto" style="width:15rem;" min="0" max="10" value="@Model.Rating.Rating" step="0.1" />
			</form-group>
		</column>
	</row>
	<form-button-bar>
		<button disable="@Model.Rating.Rating == null" type="submit" class="btn btn-primary" id="submit-btn"><span class="fa fa-save"></span> Rate</button>
		<a asp-page="/Publications/View" asp-route-id="@Model.Id" class="btn btn-secondary"><span class="fa fa-arrow-left"></span> Back to Publication</a>
	</form-button-bar>
</form>
<hr />
<h4>Rating Details</h4>
@if (Model.AllRatings.Any())
{
	<label>@Model.AllRatings.Count() total ratings</label>
	<br />
	<label>Rating Average: @Model.OverallRating</label>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			<tr>
				<th>@Html.DisplayNameFor(m => m.AllRatings.First().UserName)</th>
				<th>@Html.DisplayNameFor(m => m.AllRatings.First().Rating)</th>
			</tr>
			@foreach (var ratings in Model.VisibleRatings.OrderBy(r => r.UserName))
			{
				<tr @Html.Raw(!ratings.IsPublic ? "style=\"opacity: 0.50\"" : "")>
					<td>@(ratings.IsPublic ? "" : "*") @ratings.UserName</td>
					<td>@ratings.Rating</td>
				</tr>
			}
		</table>
	</div>
}
else
{
	<warning-alert>No Ratings</warning-alert>
}

@await Component.RenderWiki("System/MovieRatingGuidelines")

@section Scripts {
	<script>
		function disableSubmit() {
			const btn = document.getElementById("submit-btn");
			btn.classList.add("disabled");
			btn.disabled = true;
			btn.setAttribute("aria-disabled", true);
		}

		function enableSubmit() {
			const btn = document.getElementById("submit-btn");
			btn.classList.remove("disabled");
			btn.disabled = false;
			btn.removeAttribute("aria-disabled");
		}

		function ratingConnect(checkbox, textbox, slider) {
			checkbox.onchange = function () {
				if (checkbox.checked) {
					textbox.value = '';
				}
			};
			textbox.oninput = function () {
				slider.value = textbox.value;
				checkbox.checked = false;
				enableSubmit();
			};
			slider.oninput = function () {
				slider.value = Math.round(Number(this.value) * 2) / 2;
				textbox.value = slider.value;
				checkbox.checked = false;
				enableSubmit();
			};
		}
		ratingConnect(document.getElementById('Rating_Unrated'), document.getElementById('Rating_Rating'), document.getElementById('entertainmentSlider'));
	</script>
}