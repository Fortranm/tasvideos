@page "{id}"
@model EditModel
@{
	ViewData.SetTitle($"Edit Submission #{Model.Id}");
	var canEditPublicationClass = User.Has(PermissionTo.JudgeSubmissions)
		&& Model.AvailableStatuses.Any(s => s == SubmissionStatus.Accepted);
}
<top-button-bar condition="Model.CanDelete">
	<a  asp-page="Delete" asp-route-id="@Model.Id" class="btn btn-danger btn-sm">
		<i class="fa fa-remove"></i> Delete
	</a>
</top-button-bar>
<form client-side-validation="true" method="post" enctype="multipart/form-data">
	<input condition="@Model.AvailableStatuses.Count <= 1" type="hidden" asp-for="Submission.Status" />
	<row>
		<div permission="ReplaceSubmissionMovieFile" class="col-lg-6">
			<fieldset>
				<label asp-for="Submission.ReplaceMovieFile"></label>
				<input asp-for="Submission.ReplaceMovieFile" class="form-control" />
				<div>Your movie packed in a ZIP file (max size: 150k)</div>
				<span asp-validation-for="Submission.ReplaceMovieFile" class="text-danger"></span>
			</fieldset>
		</div>
		<div class="col-lg-6">
			<fieldset>
				<label asp-for="Submission.Authors">Author(s)</label>
				<string-list asp-for="Submission.Authors" />
				<span asp-validation-for="Submission.Authors" class="text-danger"></span>
			</fieldset>
			<fieldset>
				<label asp-for="Submission.ExternalAuthors"></label>
				<input asp-for="Submission.ExternalAuthors" class="form-control" />
				<div>Only authors not registered for TASVideos should be listed here. If multiple authors, separate the names with a comma.</div>
				<span asp-validation-for="Submission.ExternalAuthors" class="text-danger"></span>
			</fieldset>
		</div>
	</row>
	<row>
		<div class="col-lg-6">
			<fieldset>
				<label asp-for="Submission.GameVersion"></label>
				<input asp-for="Submission.GameVersion" class="form-control" placeholder="USA v1.0" />
				<span asp-validation-for="Submission.GameVersion" class="text-danger"></span>
			</fieldset>
			<fieldset>
				<label asp-for="Submission.GameName"></label>
				<input asp-for="Submission.GameName" class="form-control" placeholder="Example: Mega Man 2" />
				<span asp-validation-for="Submission.GameName" class="text-danger"></span>
			</fieldset>
			<fieldset>
				<label asp-for="Submission.Emulator"></label>
				<input asp-for="Submission.Emulator" spellcheck="false" class="form-control" placeholder="Needs to be a specific version that sync was verified on. Does not necessarily need to be the version used by the author." />
				<span asp-validation-for="Submission.Emulator" class="text-danger"></span>
			</fieldset>
		</div>
		<div class="col-lg-6">
			<fieldset>
				<label asp-for="Submission.Goal"></label>
				<input asp-for="Submission.Goal" class="form-control" placeholder="Example: 100% or princess only; any% can usually be omitted" />
				<span asp-validation-for="Submission.Goal" class="text-danger"></span>
			</fieldset>
			<fieldset>
				<label asp-for="Submission.RomName">ROM filename</label>
				<input asp-for="Submission.RomName" class="form-control" placeholder="Example: Mega Man II (U) [!].nes" />
				<span asp-validation-for="Submission.RomName" class="text-danger"></span>
			</fieldset>
			<fieldset>
				<label asp-for="Submission.EncodeEmbedLink"></label>
				<input asp-for="Submission.EncodeEmbedLink" class="form-control" placeholder="Embedded link to a video of your movie, Ex: www.youtube.com/embed/0mregEW6kVU" />
				<span asp-validation-for="Submission.EncodeEmbedLink" class="text-danger"></span>
			</fieldset>
		</div>
	</row>
	<row>
		<div class="col-lg-6">
			<fieldset>
				<label asp-for="Submission.Status"></label>
				<select class="form-select"
						asp-for="Submission.Status"
						asp-items="@Model.AvailableStatuses.Select(s => new SelectListItem { Text = s.EnumDisplayName(), Value = ((int)s).ToString(), Selected = s == Model.Submission.Status })"></select>
			</fieldset>
			<fieldset id="rejection-reason" show="@Model.Submission.Status == SubmissionStatus.Rejected">
				<label asp-for="Submission.RejectionReason">Reason</label>
				<select asp-for="Submission.RejectionReason" asp-items="Model.AvailableRejectionReasons" class="form-select"></select>
			</fieldset>
		</div>
		<div condition="canEditPublicationClass" class="col-lg-6">
			<fieldset>
				<label asp-for="Submission.IntendedPublicationClass"></label>
				<select asp-for="Submission.IntendedPublicationClass" asp-items="@UiDefaults.DefaultEntry.Concat(Model.AvailableClasses)" class="form-select"></select>
				<span asp-validation-for="Submission.IntendedPublicationClass" class="text-danger"></span>
			</fieldset>
		</div>
		<input type="hidden" asp-for="Submission.IntendedPublicationClass" condition="!canEditPublicationClass" />
	</row>
	<fullrow class="mt-3">
		<partial name="_WikiEditHelper" model="@("Markup")" />
	</fullrow>
	<fullrow>
		<fieldset>
			<label asp-for="Markup">Comments and explanations</label>
			<textarea asp-for="Markup" rows="12" class="form-control" placeholder="Enter your __wiki markup__ here..."></textarea>
			<span asp-validation-for="Markup" class="text-danger"></span>
			@await Html.RenderWiki(SystemWiki.WikiEditHelp)
		</fieldset>
	</fullrow>
	<row>
		<div class="col-12">
			<fieldset>
				<label asp-for="Submission.RevisionMessage"></label>
				<div class="input-group">
					<input asp-for="Submission.RevisionMessage" class="form-control" />
					<div class="input-group-text">
						<input type="checkbox" class="form-check-input me-1 mt-0" asp-for="Submission.MinorEdit" />
						<label asp-for="Submission.MinorEdit" class="form-check-label"></label>
					</div>
				</div>
				<span asp-validation-for="Submission.RevisionMessage" class="text-danger"></span>
			</fieldset>
		</div>
	</row>
	<form-button-bar>
		<preview-button></preview-button>
		<submit-button id="submit-btn"></submit-button>
		<cancel-link asp-page="View" asp-route-id="@Model.Id"></cancel-link>
	</form-button-bar>
</form>

<partial name="_PreviewWindow" model="@(Html.IdFor(m => m.Markup), "/Wiki/Preview")" />

@section Scripts {
	<script>
		document.getElementById('@Html.IdFor(m => m.Submission.Status)').addEventListener("change", function () {
			const reject = '@((int)SubmissionStatus.Rejected)';
			if (this.value === reject) {
				document.getElementById('rejection-reason').classList.remove('d-none');
			} else {
				document.getElementById('rejection-reason').classList.add('d-none');
			}
		});
	</script>
}
